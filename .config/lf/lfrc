# Basic Settings
# set hidden true
set preview true
set drawbox true
set info size
set icons true
set ignorecase true
# set number true

set cleaner ~/.config/lf/preview-image
set previewer ~/.config/lf/pv
# set previewer pistol

# Custom Functions
cmd j %lf -remote "send $id cd '$(autojump $1)'"

cmd open ${{
    case $(file --mime-type "$f" -bL) in
        text/*|application/json) $EDITOR "$f";;
        *) xdg-open "$f" ;;
    esac
}}

cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

cmd chmod ${{
  printf "Mode Bits: "
  read ans

  for file in "$fx"
  do
    chmod $ans $file
  done

  lf -remote 'send reload'
}}

cmd sudomkfile ${{
  printf "File Name: "
  read ans
  sudo $EDITOR $ans
}}

cmd setwallpaper %cp "$f" ~/.config/wall.jpg && xwallpaper --zoom "$f"

cmd fzf_jump ${{
  res="$(find . -maxdepth 3 | fzf --reverse --header='Jump to location')"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}

cmd broot_jump ${{
  f=$(mktemp)
  res="$(broot --outcmd $f && cat $f | sed 's/cd //')"
  rm -f "$f"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}

# cmd open_config  ${{
#   $EDITOR $(bookmenu -b ~/.config/bookmenu/configs -f fzf -o)
# }}

cmd dragon %dragon-drag-and-drop -a -x $fx
cmd dragon-stay %dragon-drag-and-drop -a $fx
cmd dragon-individual %dragon-drag-and-drop $fx
cmd cpdragon %cpdragon
cmd mvdragon %mvdragon
cmd dlfile %dlfile

# Archive bindings
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"

# Trash cli bindings
cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    # extract the substring from start of string up to delimiter.
    # this is the first "element" of the string.
    file=${files%%;*}

    trash-put "$(basename "$file")"
    # if there's only one element left, set `files` to an empty string.
    # this causes us to exit this `while` loop.
    # else, we delete the first "element" of the string from files, and move onto the next.
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

cmd clear_trash %trash-empty

cmd restore_trash ${{
  trash-restore
}}

cmd stripspace %stripspace "$f"

# Bindings
# Remove some defaults
map m
map w
# map o
map n
map "'"
map '"'
map d
# map c
map e
map f
map x 
map y
map p

# # File Openers
map ee $$EDITOR "$f"
# map u $view "$f"
map S $$SHELL

# Archive Mappings
map az zip
map at tar
map ag targz
map ab targz
map au unarchive

# Img Preview 
map - $~/.config/lf/preview-image "$f"

# Trash Mappings
map DD trash
map tc clear_trash
map tr restore_trash

# Broot Mapping
# map f broot_jump

# Dragon Mapping
map dr dragon
map ds dragon-stay
map di dragon-individual
map dm mvdragon
map dc cpdragon
map dl dlfile

map ss stripspace

# Basic Functions
map . set hidden!
map yy copy
map dd cut
map pp paste
map <enter> open
map mf mkfile
map mr sudomkfile
map md mkdir
map ms $mkscript
map ch chmod
map x setwallpaper
# map o open_config
# map br $vimv $fx
map r rename
# map H top
# map L bottom
map R reload
map C clear
map U unselect

# Movement
map gt cd ~/.local/share/Trash/files

map gp cd ~/Prog
map gv cd ~/Videos

map gi cd ~/pictures
map gis cd ~/Images/screenshots

map gw cd ~/dotfiles/wallpapers

map gd cd ~/Documents
map gD cd ~/Downloads

map gc cd ~/.config
map gs cd ~/scripts

# autojump
map J push :j<space>
